{"version":3,"file":"static/js/884.35de957b.chunk.js","mappings":"iOAmFA,UA/EqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACjD,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,WAA2BC,GAA3B,uFAEgB,sCACA,mCAHhB,SAK2BC,EAAAA,EAAAA,IAAA,UAHX,uCAGW,OAAmBD,EAAnB,oBAFX,oCAEmD,IALnE,OAKUE,EALV,OASIN,EAASM,EAASC,MATtB,gDAWIL,EAAS,EAAD,IAXZ,0DAFc,2DAiBdM,CAAYlB,EAKb,GAAE,CAACA,IAEJ,IAAQmB,EACNV,EADMU,MAAOC,EACbX,EADaW,aAAcC,EAC3BZ,EAD2BY,YAAaC,EACxCb,EADwCa,SAAUC,EAClDd,EADkDc,OAAQC,EAC1Df,EAD0De,aAItDC,EAAYC,OAAOC,SAAwB,GAAfH,GAElC,OACE,gCACGb,IAAS,wBAAKA,EAAMiB,WACrB,SAAC,KAAD,CAAMC,GAAIzB,EAAV,qBACCK,IACC,4BACE,0BACGU,EADH,KACYC,EAAaU,MAAM,EAAG,GADlC,QAGA,wCAAgBL,EAAhB,QACA,sCACA,uBAAIH,KACJ,mCACCC,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,KAAMlB,EAAT,EAASA,GAAT,OACV,uBAAakB,GAALlB,EADE,QAMhB,0BACE,gBACEmB,IAAG,0CAAqCZ,GACxCa,IAAKf,OAGT,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,SAAT,6BAKN,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from ?? '/movies');\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function fetchMovies(id) {\n      try {\n        const URL = 'https://api.themoviedb.org/3/movie/';\n        const KEY = '7113ba9605fd4f5593de8c8922948eb6';\n\n        const response = await axios.get(`${URL}${id}?api_key=${KEY}`, {\n          //   signal: abortController.signal,\n        });\n\n        setMovie(response.data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n\n    fetchMovies(movieId);\n\n    // return () => {\n    //   abortController.abort();\n    // };\n  }, [movieId]);\n\n  const { title, release_date, poster_path, overview, genres, vote_average } =\n    movie;\n\n  //   const userScore = Number.parseInt((vote_average / vote_count) * 100);\n  const userScore = Number.parseInt(vote_average * 10);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <Link to={goBackRef}>Go back</Link>\n      {movie && (\n        <div>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p>User Score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres.map(({ name, id }) => (\n            <p key={id}>{name}</p>\n          ))}\n        </div>\n      )}\n\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n      </div>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","goBackRef","useRef","state","from","useState","movie","setMovie","error","setError","useEffect","id","axios","response","data","fetchMovies","title","release_date","poster_path","overview","genres","vote_average","userScore","Number","parseInt","message","to","slice","map","name","src","alt"],"sourceRoot":""}